<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Course;
use Illuminate\Support\Facades\Auth;
use App\Services\CourseService;

class CourseController extends Controller
{
    protected $courseService;

    public function __construct(CourseService $courseService)
    {
        $this->courseService = $courseService;
    }

    public function index()
    {
        $courses = $this->courseService->getAllCourses();
        return view('courses.index', compact('courses'));
    }

    public function show($id)
    {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—É—Ä—Å —Å –µ–≥–æ —É—Ä–æ–∫–∞–º–∏
        $course = $this->courseService->getCourseById($id);
        $hasCourse = false;

        if (Auth::check()) {
            $hasCourse = $this->courseService->hasCourse($id);
        }

        return view('courses.show', compact('course', 'hasCourse'));
    }

    /** üîπ –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—É—Ä—Å–∞ */
    public function create()
    {
        return view('admin.courses.create');
    }

    /** üîπ –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞ */
    public function store(Request $request)
    {
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        $data = $request->validate([
            'language' => 'required|string|max:255',
            'title' => 'required|string|max:255',
            'description' => 'nullable|string',
            'image' => 'nullable|image|mimes:jpeg,png,jpg,gif|max:2048',
        ]);

        // –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–∞ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
        $this->courseService->createCourse($data);

        return redirect()->route('admin.courses')->with('success', '–ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω!');
    }


    /** üîπ –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫—É—Ä—Å–∞ */
    public function edit(Course $course)
    {
        return view('admin.courses.edit', compact('course'));
    }

    /** üîπ –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞ */
    public function update(Request $request, Course $course)
    {
        $data = $request->validate([
            'title' => 'required|string|max:255',
            'description' => 'nullable|string',
        ]);

        $this->courseService->updateCourse($course, $data);

        return redirect()->route('admin.courses')->with('success', '–ö—É—Ä—Å –æ–±–Ω–æ–≤–ª—ë–Ω!');
    }

    /** üîπ –ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞ */
    public function destroy($id)
    {
        $this->courseService->deleteCourse($id);

        return redirect()->route('admin.courses')->with('success', '–ö—É—Ä—Å —É–¥–∞–ª—ë–Ω!');
    }
}

